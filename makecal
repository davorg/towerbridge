#!/usr/bin/perl

use strict;
use warnings;
use 5.010;

use Data::Dumper;
use DateTime;
use DateTime::Format::Strptime;
use Web::Query;
use JSON;
use Date::ICal;
use Data::ICal;
use Data::ICal::Entry::Event;

my $i = 0;

my $now = DateTime->now;
my ($curr_mon, $curr_year) = ($now->month, $now->year);

my $ical = Data::ICal->new(time_zone => 'Europe/London');
my $dt_parser = DateTime::Format::Strptime->new(
  pattern => '%H:%M %d %b %Y',
  time_zone => 'Europe/London',
);

my $now_ical = Date::ICal->new(epoch => time);

my @lifts;

wq('http://www.towerbridge.org.uk/lift-times/')
  ->find('table.lined tbody tr')
  ->each(sub { push @lifts, [ map { $_->text } $_[1]->contents ] });

my %seen;
my @json;

foreach (@lifts) {
  my $date = $dt_parser->parse_datetime("$_->[2] $_->[1] $curr_year");
  # If the month number of this event is less than the current month
  # number then we've gone to the next year. Increment the year number
  # and re-calculate.
  if ($date->mon < $curr_mon) {
    ++$curr_year;
    $date = $dt_parser->parse_datetime("$_->[2] $_->[1] $curr_year");
  }

  # Tower Bridge web site occasionally has duplicates
  next if $seen{$date->epoch}++;

  my $event = Data::ICal::Entry::Event->new();
  $event->add_properties(
    summary => 'Tower Bridge Lift',
    description => "$_->[3] ($_->[4])",
    dtstart => Date::ICal->new(epoch => $date->epoch)->ical,
    duration => 'PT30M',
    dtstamp => $now_ical->ical,
    uid => $date->epoch . '@towerbridge.dave.org.uk',
  );
  $ical->add_entry($event);

  my $lift;
  $lift->{datetime}  = $date->ymd('-') . 'T' . $date->hms . $date->strftime('%z');
  $lift->{vessel}    = $_->[3];
  $lift->{direction} = $_->[4];

  push @json, $lift;
}

open my $ical_fh, '>', 'towerbridge.ics' or die $!;
print $ical_fh $ical->as_string;

open my $json_fh, '>', 'towerbridge.json' or die $!;
print $json_fh JSON->new->pretty->encode(\@json);
